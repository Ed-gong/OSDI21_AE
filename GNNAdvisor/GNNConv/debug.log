running install
running bdist_egg
running egg_info
writing GNNAdvisor.egg-info/PKG-INFO
writing dependency_links to GNNAdvisor.egg-info/dependency_links.txt
writing top-level names to GNNAdvisor.egg-info/top_level.txt
reading manifest file 'GNNAdvisor.egg-info/SOURCES.txt'
writing manifest file 'GNNAdvisor.egg-info/SOURCES.txt'
installing library code to build/bdist.linux-x86_64/egg
running install_lib
running build_ext
building 'GNNAdvisor' extension
Emitting ninja build file /home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/build/temp.linux-x86_64-3.6/build.ninja...
Compiling objects...
Allowing ninja to set a default number of workers... (overridable by setting the environment variable MAX_JOBS=N)
[1/1] /usr/local/cuda-11.1/bin/nvcc --generate-dependencies-with-compile --dependency-output /home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/build/temp.linux-x86_64-3.6/GNNAdvisor_kernel.o.d -I/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/include -I/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/include/torch/csrc/api/include -I/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/include/TH -I/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/include/THC -I/usr/local/cuda-11.1/include -I/home/yuke/anaconda3/envs/osdi-ae/include/python3.6m -c -c /home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu -o /home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/build/temp.linux-x86_64-3.6/GNNAdvisor_kernel.o -D__CUDA_NO_HALF_OPERATORS__ -D__CUDA_NO_HALF_CONVERSIONS__ -D__CUDA_NO_BFLOAT16_CONVERSIONS__ -D__CUDA_NO_HALF2_OPERATORS__ --expt-relaxed-constexpr --compiler-options ''"'"'-fPIC'"'"'' -DTORCH_API_INCLUDE_EXTENSION_H '-DPYBIND11_COMPILER_TYPE="_gcc"' '-DPYBIND11_STDLIB="_libstdcpp"' '-DPYBIND11_BUILD_ABI="_cxxabi1011"' -DTORCH_EXTENSION_NAME=GNNAdvisor -D_GLIBCXX_USE_CXX11_ABI=0 -gencode=arch=compute_86,code=compute_86 -gencode=arch=compute_86,code=sm_86 -std=c++14
/home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu: In lambda function:
/home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu:83:43: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]
     AT_DISPATCH_FLOATING_TYPES(input.type(), "spmm_cuda_forward", ([&] {
                                           ^
/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/include/ATen/core/TensorBody.h:303:1: note: declared here
   DeprecatedTypeProperties & type() const {
 ^ ~~
/home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu:83:98: warning: ‘c10::ScalarType detail::scalar_type(const at::DeprecatedTypeProperties&)’ is deprecated: passing at::DeprecatedTypeProperties to an AT_DISPATCH macro is deprecated, pass an at::ScalarType instead [-Wdeprecated-declarations]
     AT_DISPATCH_FLOATING_TYPES(input.type(), "spmm_cuda_forward", ([&] {
                                                                                                  ^
/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/include/ATen/Dispatch.h:109:1: note: declared here
 inline at::ScalarType scalar_type(const at::DeprecatedTypeProperties& t) {
 ^~~~~~~~~~~
/home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu: In lambda function:
/home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu:213:46: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]
     AT_DISPATCH_FLOATING_TYPES(d_output.type(), "spmm_cuda_backward", ([&] {
                                              ^
/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/include/ATen/core/TensorBody.h:303:1: note: declared here
   DeprecatedTypeProperties & type() const {
 ^ ~~
/home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu:213:101: warning: ‘c10::ScalarType detail::scalar_type(const at::DeprecatedTypeProperties&)’ is deprecated: passing at::DeprecatedTypeProperties to an AT_DISPATCH macro is deprecated, pass an at::ScalarType instead [-Wdeprecated-declarations]
     AT_DISPATCH_FLOATING_TYPES(d_output.type(), "spmm_cuda_backward", ([&] {
                                                                                                     ^
/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/include/ATen/Dispatch.h:109:1: note: declared here
 inline at::ScalarType scalar_type(const at::DeprecatedTypeProperties& t) {
 ^~~~~~~~~~~
/home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu: In lambda function:
/home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu:322:43: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]
     AT_DISPATCH_FLOATING_TYPES(input.type(), "spmm_cuda_forward_gin", ([&] {
                                           ^
/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/include/ATen/core/TensorBody.h:303:1: note: declared here
   DeprecatedTypeProperties & type() const {
 ^ ~~
/home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu:322:98: warning: ‘c10::ScalarType detail::scalar_type(const at::DeprecatedTypeProperties&)’ is deprecated: passing at::DeprecatedTypeProperties to an AT_DISPATCH macro is deprecated, pass an at::ScalarType instead [-Wdeprecated-declarations]
     AT_DISPATCH_FLOATING_TYPES(input.type(), "spmm_cuda_forward_gin", ([&] {
                                                                                                  ^
/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/include/ATen/Dispatch.h:109:1: note: declared here
 inline at::ScalarType scalar_type(const at::DeprecatedTypeProperties& t) {
 ^~~~~~~~~~~
/home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu: In lambda function:
/home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu:381:46: warning: ‘at::DeprecatedTypeProperties& at::Tensor::type() const’ is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]
     AT_DISPATCH_FLOATING_TYPES(d_output.type(), "spmm_cuda_backward_gin", ([&] {
                                              ^
/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/include/ATen/core/TensorBody.h:303:1: note: declared here
   DeprecatedTypeProperties & type() const {
 ^ ~~
/home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/GNNAdvisor_kernel.cu:381:101: warning: ‘c10::ScalarType detail::scalar_type(const at::DeprecatedTypeProperties&)’ is deprecated: passing at::DeprecatedTypeProperties to an AT_DISPATCH macro is deprecated, pass an at::ScalarType instead [-Wdeprecated-declarations]
     AT_DISPATCH_FLOATING_TYPES(d_output.type(), "spmm_cuda_backward_gin", ([&] {
                                                                                                     ^
/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/include/ATen/Dispatch.h:109:1: note: declared here
 inline at::ScalarType scalar_type(const at::DeprecatedTypeProperties& t) {
 ^~~~~~~~~~~
g++ -pthread -shared -B /home/yuke/anaconda3/envs/osdi-ae/compiler_compat -L/home/yuke/anaconda3/envs/osdi-ae/lib -Wl,-rpath=/home/yuke/anaconda3/envs/osdi-ae/lib -Wl,--no-as-needed -Wl,--sysroot=/ /home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/build/temp.linux-x86_64-3.6/GNNAdvisor.o /home/yuke/OSDI21_AE/GNNAdvisor/GNNConv/build/temp.linux-x86_64-3.6/GNNAdvisor_kernel.o -L/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/torch/lib -L/usr/local/cuda-11.1/lib64 -lc10 -ltorch -ltorch_cpu -ltorch_python -lcudart -lc10_cuda -ltorch_cuda_cu -ltorch_cuda_cpp -o build/lib.linux-x86_64-3.6/GNNAdvisor.cpython-36m-x86_64-linux-gnu.so
creating build/bdist.linux-x86_64/egg
copying build/lib.linux-x86_64-3.6/GNNAdvisor.cpython-36m-x86_64-linux-gnu.so -> build/bdist.linux-x86_64/egg
creating stub loader for GNNAdvisor.cpython-36m-x86_64-linux-gnu.so
byte-compiling build/bdist.linux-x86_64/egg/GNNAdvisor.py to GNNAdvisor.cpython-36.pyc
creating build/bdist.linux-x86_64/egg/EGG-INFO
copying GNNAdvisor.egg-info/PKG-INFO -> build/bdist.linux-x86_64/egg/EGG-INFO
copying GNNAdvisor.egg-info/SOURCES.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying GNNAdvisor.egg-info/dependency_links.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
copying GNNAdvisor.egg-info/top_level.txt -> build/bdist.linux-x86_64/egg/EGG-INFO
writing build/bdist.linux-x86_64/egg/EGG-INFO/native_libs.txt
creating 'dist/GNNAdvisor-0.0.0-py3.6-linux-x86_64.egg' and adding 'build/bdist.linux-x86_64/egg' to it
removing 'build/bdist.linux-x86_64/egg' (and everything under it)
Processing GNNAdvisor-0.0.0-py3.6-linux-x86_64.egg
removing '/home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/GNNAdvisor-0.0.0-py3.6-linux-x86_64.egg' (and everything under it)
creating /home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/GNNAdvisor-0.0.0-py3.6-linux-x86_64.egg
Extracting GNNAdvisor-0.0.0-py3.6-linux-x86_64.egg to /home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages
GNNAdvisor 0.0.0 is already the active version in easy-install.pth

Installed /home/yuke/anaconda3/envs/osdi-ae/lib/python3.6/site-packages/GNNAdvisor-0.0.0-py3.6-linux-x86_64.egg
Processing dependencies for GNNAdvisor==0.0.0
Finished processing dependencies for GNNAdvisor==0.0.0
